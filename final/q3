example1: when the pc handle image, it needs to esizing, cropping, or applying filters. If we using single thread, it will cost a lot of time.  However, we can split the task into multiple threads and process multiple images simultaneously in a multithreaded solution. we could have one thread that loads the images, another thread that applies the filters, and a third thread that saves the processed images.
example2: if there is a server that needs to handle multiple client requests at the same time. If we have a single-threaded solution, we would need to process each request sequentially, one at a time, which could result in long waiting times for the clients. However, we can have multiple threads to handle each client request concurrently in multithreaded solution.